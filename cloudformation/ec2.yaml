AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  InstanceType:
    Type: String
    Default: t2.micro
  ImageId:
    Type: String
Resources:
  EC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: ecs-role
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - 'ecs:CreateCluster'
            - 'ecs:DeregisterContainerInstance'
            - 'ecs:DiscoverPollEndpoint'
            - 'ecs:Poll'
            - 'ecs:RegisterContainerInstance'
            - 'ecs:StartTelemetrySession'
            - 'ecs:Submit*'
            - 'logs:CreateLogStream'
            - 'logs:PutLogEvents'
            Resource: '*'
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
      - !Ref EC2Role
  ECSInstances:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref InstanceProfile
      AssociatePublicIpAddress: true
      SecurityGroups:
      - Fn::ImportValue: securitygroup
      UserData:
        Fn::Base64:
          Fn::Sub:
          - |
            #!/bin/bash -xe
            echo ECS_CLUSTER=${ClusterName} >> /etc/ecs/ecs.config
            yum install -y aws-cfn-bootstrap
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --region ${AWS::Region}
          - ClusterName: !ImportValue ECSCluster
  ECSAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      HealthCheckType: EC2
      VPCZoneIdentifier:
      - !ImportValue subnet1
      - !ImportValue subnet2
      LaunchConfigurationName: !Ref ECSInstances
      MinSize: 0
      MaxSize: 1
      DesiredCapacity: 1
      TargetGroupARNs:
      - !ImportValue targetgroup
